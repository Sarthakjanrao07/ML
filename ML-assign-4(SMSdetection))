4. Assignment on Improving Performance of Classifier Models
A SMS unsolicited mail (every now and then known as cell smartphone junk mail) is any junk message
brought to a cellular phone as textual content messaging via the Short Message Service (SMS). Use
probabilistic approach (Naive Bayes Classifier / Bayesian Network) to implement SMS Spam Filtering
system. SMS messages are categorized as SPAM or HAM using features like length of message, word
depend, unique keywords etc.
Download Data -Set from : http://archive.ics.uci.edu/ml/datasets/sms+spam+collection
This dataset is composed by just one text file, where each line has the correct class followed by
the raw message.
a. Apply Data pre-processing (Label Encoding, Data Transformationâ€¦.) techniques if
necessary
b. Perform data-preparation (Train-Test Split)
c. Apply at least two Machine Learning Algorithms and Evaluate Models
d. Apply Cross-Validation and Evaluate Models and compare performance.
e. Apply Hyper parameter tuning and evaluate models and compare performance.
---------------------------------------------------------------------------------------------------

import numpy as np
import pandas as pd

df = pd.read_csv('/content/spam.csv',encoding='ISO-8859-1')
df.head()

df.info()

df.groupby('v1').describe()

df['spam'] = df['v1'].apply(lambda x:1 if x=='spam' else 0)

df.head()

new_df = df[['v1','v2','spam']]

new_df.head()

from sklearn.model_selection import train_test_split as tts
x_train,x_test,y_train,y_test=tts(df.v2,df.spam)
from sklearn.feature_extraction.text import CountVectorizer
v=CountVectorizer()
x_train_count=v.fit_transform(x_train.values)
x_train_count.toarray()[:2]

print(v)
print(df.v2)
print(df.spam)

from sklearn.naive_bayes import MultinomialNB
model=MultinomialNB()
model.fit(x_train_count,y_train)

emails=["How are you brother?", "Free entry"]

email_count=v.transform(emails)
model.predict(email_count)

x_test_count=v.transform(x_test)
model.score(x_test_count,y_test)
